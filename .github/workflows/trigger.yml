name: API Trigger

on:       
  # Allows to receive event through the REST API
  repository_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Checkout repo
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote
          
      - name: Create env file
        run: |
          touch .env
          export PUBLIC_VERSION=$(jq -r .version utile-front/package.json)
          cat << EOF > .env
          NOTION_SECRET=${{ secrets.NOTION_SECRET }}
          NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}
          TWITTER_POST_URL=${{ secrets.TWITTER_POST_URL }}

          BOT_TOKEN=${{ secrets.BOT_TOKEN }}

          # Front env var, note that the prefix VITE_ is required
          PUBLIC_VERSION=${PUBLIC_VERSION}
          VITE_API_URL=${{ secrets.API_URL }}
          EOF
          
      - name: Update the stack on the production server
        run: docker compose --env-file /etc/environment up --remove-orphans -d ${{ github.event.client_payload.service }}

      - name: Cleans up useless images
        run: docker image prune --force
